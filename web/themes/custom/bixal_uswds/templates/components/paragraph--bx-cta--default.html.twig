{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% if content.field_bx_cta_reverse | render and content.field_bx_cta_reverse.0["#markup"] == 1 %}
  {% set order_first = 'order-first'%}
  {% set order_last = 'order-last' %}
{% endif %}

{% set classes = [
  'tablet-lg:flex-row',
  'flex-column',
  'cta-split',
  'border-2px',
  'grid-row',
  'component',
  'component--type--' ~ paragraph.bundle|clean_class,
  view_mode ?  'component--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ?  'component--unpublished'
] %}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      <div class="tablet-lg:grid-col-6 {{ order_last }}">

        <div class="padding-x-5 padding-y-1">
          <h2>{{ content.field_bx_title | field_value }}</h2>

          {% if content.field_bx_text | render %}
            {{ content.field_bx_text | field_value }}
          {% endif %}

          {%  if content.field_bx_link | render %}
            <a
              type="button" class="usa-button"
              href="{{ content.field_bx_link.0["#url_title"] }}"
              title="{{ content.field_bx_link.0["#title"] }}">
              {{ content.field_bx_link.0["#title"] }}
            </a>
          {% endif %}
        </div>
      </div>

      <div class="tablet-lg:grid-col-6 padding-right-0 {{ order_first }}">
        <div class="cta-split__media">
          {{ content.field_bx_media | field_value }}
        </div>
      </div>
    {% endblock %}
  </div>
{% endblock paragraph %}

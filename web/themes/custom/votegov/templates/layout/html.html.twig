{#
/**
* @file
* Theme override for the basic structure of a single Drupal page.
*
* Variables:
* - logged_in: A flag indicating if user is logged in.
* - root_path: The root path of the current page (e.g., node, admin, user).
* - node_type: The content type for the current node, if the page is a node.
* - head_title: List of text elements that make up the head_title variable.
* May contain one or more of the following:
* - title: The title of the page.
* - name: The name of the site.
* - slogan: The slogan of the site.
* - page_top: Initial rendered markup. This should be printed before 'page'.
* - page: The rendered page markup.
* - page_bottom: Closing rendered markup. This variable should be printed after
* 'page'.
* - db_offline: A flag indicating if the database is offline.
* - placeholder_token: The token for generating head, css, js and js-bottom
* placeholders.
*
* @see template_preprocess_html()
*/
#}
{% set body_classes = [
  logged_in ? 'user-logged-in',
  not root_path ? 'path-frontpage' : 'path-' ~ root_path|clean_class,
  db_offline ? 'db-offline',
] %}


<!DOCTYPE html>
<html{{ html_attributes }}>
<head>
  <head-placeholder token="{{ placeholder_token }}">
  <title>{{ head_title|safe_join(' | ') }}</title>
  <css-placeholder token="{{ placeholder_token }}">
  <js-placeholder token="{{ placeholder_token }}">
  <link rel="preconnect" href="https://www.googletagmanager.com" crossorigin>
    <!-- DataLayer -->
    <script id="taxonomy-data">
      dataLayer = [{
        "Page_Language" : "{{ languagename }}",
        "State_or_Territory": "{{ node_type == 'state_territory' ? title_english }}",
{% if is_frontpage %}
        "Content_Group_1": "Homepage",
        "Content_Group_2": "Homepage",
        "Content_Group_3": "Homepage"
{% elseif  node_type == 'page' %}
        "Content_Group_1": "About section",
        "Content_Group_2": "About section",
        "Content_Group_3": "{{ title_english }}"
{% elseif node_type == 'state_territory' %}
        "Content_Group_1": "Registration section",
        "Content_Group_2": "Registration state page",
        "Content_Group_3": "Registration in {{ title_english }}"
{% elseif node_type == 'voter_guide' %}
        "Content_Group_1": "Voter guide section",
        "Content_Group_2": "Voter guide content page",
        "Content_Group_3": "{{ title_english }}"
{% elseif node_type == 'landing' %}
{% if title_english == 'Register to vote'%}
        "Content_Group_1": "Registration section",
{% elseif title_english == "Guide to voting" %}
        "Content_Group_1": "Voter guide section",
{% else %}
        "Content_Group_1": "{{ title_english }}",
{% endif %}
        "Content_Group_2": "{{ title_english }} landing page",
        "Content_Group_3": "{{ title_english }} landing page"
{% endif %}
      }];
    </script>
    {% if not logged_in %}
      <!-- Google Tag Manager -->
      <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push(
          {'gtm.start': new Date().getTime(),event:'gtm.js'}
        );var f=d.getElementsByTagName(s)[0],
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-5BKF7S7X');</script>
      <!-- End Google Tag Manager -->
      <!-- Crazy Egg -->
      <script type="text/javascript" src="//script.crazyegg.com/pages/scripts/0007/9651.js" async="async" > </script>
      <!-- End Crazy Egg -->
    {% endif %}
</head>

<body{{ attributes.addClass(body_classes) }}>
{% if not logged_in %}
  <!-- Google Tag Manager (noscript) -->
  <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-5BKF7S7X"
                    sandbox height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <!-- End Google Tag Manager (noscript) -->
{% endif %}
{# Keyboard navigation/accessibility link to main content. #}
  <a href="#main-content" class="usa-skipnav">
    {{ 'Skip to main content'|t }}
  </a>
  {{ page_top }}
  {{ page }}
  {{ page_bottom }}
  <js-bottom-placeholder token="{{ placeholder_token }}">
</body>
</html>

<?php

/**
 * @file
 * Preprocess function for page.
 */

/**
 * Implements hook_theme_suggestion_HOOK_alter().
 */
function vote_nvrf_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $current_route_name = \Drupal::routeMatch()->getRouteName();
  $current_route_array = explode('.', $current_route_name);

  // Custom route.
  if ($current_route_array[0] == 'vote_nvrf') {
    $suggestions[] = "page__node__" . $current_route_array[0];
    $suggestions[] = "page__node__" . str_replace('.', '_', $current_route_name);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function vote_nvrf_preprocess_block__votegov_languageswitcher(&$variables) {
  $current_route_name = \Drupal::routeMatch()->getRouteName();
  $vote_nvrf_page_routes = ['vote_nvrf.nvrf_page', 'vote_nvrf.nvrf_page_es'];
  $links = $variables['content']['#links'];

  // Remove the language selector for NVRF page routes.
  if (in_array($current_route_name, $vote_nvrf_page_routes)) {
    foreach ($links as $i => $link) {
      unset($variables['content']['#links'][$i]);
    }
  }
}

/**
 * Implements hook_taxonomy_term_delete().
 */
function vote_nvrf_taxonomy_term_delete($term) {

  if ($term->bundle() === 'nvrf_field') {
    $deleted_tid = $term->id();
    $field_name = 'field_nvrf_fields';
    $entity_type = 'node';

    // Get all entities referencing the deleted term.
    $query = \Drupal::database()->select("{$entity_type}__{$field_name}", 't')
      ->fields('t', ['entity_id'])
      ->condition("{$field_name}_nvrf_field", $deleted_tid, '=')
      ->execute();

    $entities_to_update = $query->fetchCol();

    if (!empty($entities_to_update)) {
      $storage = \Drupal::entityTypeManager()->getStorage($entity_type);

      foreach ($entities_to_update as $entity_id) {
        $entity = $storage->load($entity_id);
        if ($entity) {
          // Get the current values of the multi-entry field.
          $field_values = $entity->get($field_name)->getValue();

          // Filter out the deleted term from the field values.
          $updated_values = array_filter($field_values, function ($item) use ($deleted_tid) {
            return $item['nvrf_field'] != $deleted_tid;
          });

          // Only update the entity if values have changed.
          if (count($updated_values) !== count($field_values)) {
            $entity->get($field_name)->setValue($updated_values);
            $entity->save();
          }
        }
      }
    }
  }
}
